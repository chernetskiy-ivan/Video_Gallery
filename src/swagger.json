{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Video Gallery API",
    "description": "A swagger documentation for Video Gallery API in Innowise Group"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "API for auth in the system"
    },
    {
      "name": "Video",
      "description": "API for video in the system"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register new user",
        "requestBody": {
          "required": true,
          "description": "User create payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully created"
          },
          "400": {
            "description": "Registration error"
          },
          "404": {
            "description": "This user is alredy exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login in system",
        "requestBody": {
          "required": true,
          "description": "User create payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return access anf refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessAndRefreshToken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "requestBody": {
          "required": true,
          "description": "Refresh token to get new access and refresh tokens",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refreshToken"
              }
            }
          }
        },
        "tags": ["Auth"],
        "summary": "Get new couple of access and refresh tokens",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessAndRefreshToken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh_token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/video/": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Video"],
        "summary": "Get videos",
        "responses": {
          "200": {
            "description": "Array of videos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/videos"
                }
              }
            }
          },
          "404": {
            "description": "Videos not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/video/upload": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Video"],
        "summary": "Post new video",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/uploadVideo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video uploaded successfully"
          },
          "400": {
            "description": "No files were uploaded. Or bad request body"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/video/{videoId}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "videoId",
            "in": "path",
            "required": true,
            "description": "ID of the video that we want to get",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": ["Video"],
        "summary": "Get video by id",
        "responses": {
          "200": {
            "description": "Video output information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/videoOutPut"
                }
              }
            }
          },
          "404": {
            "description": "Video not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "videoId",
            "in": "path",
            "required": true,
            "description": "ID of the video that we want to update",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": ["Video"],
        "summary": "update video by id",
        "requestBody": {
          "required": true,
          "description": "Video update payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/videoUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video updated successfully"
          },
          "404": {
            "description": "Video not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "videoId",
            "in": "path",
            "required": true,
            "description": "ID of the video that we want to delete",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": ["Video"],
        "summary": "Delete video by id",
        "responses": {
          "200": {
            "description": "Video successfully deleted"
          },
          "404": {
            "description": "Video not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/video/{videoId}/download": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "videoId",
            "in": "path",
            "required": true,
            "description": "ID of the video that we want to delete",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": ["Video"],
        "summary": "Download video by videoId",
        "responses": {
          "200": {
            "description": "Video downloaded successfully"
          },
          "404": {
            "description": "Video not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "user": {
        "description": "user",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "refreshToken": {
        "description": "Refresh token",
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "string"
          }
        },
        "required": ["refresh_token"]
      },
      "videoOutPut": {
        "description": "output information about video",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "videos": {
        "description": "array of videos",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/videoOutPut"
        }
      },
      "accessAndRefreshToken": {
        "description": "Access and refresh token",
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "uploadVideo": {
        "description": "Upload Video",
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "description": {
            "type": "string"
          },
          "mode": {
            "type": "boolean"
          },
          "openFor": {
            "type": "string"
          }
        }
      },
      "videoUpdate": {
        "description": "Update Video",
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "mode": {
            "type": "boolean"
          },
          "openFor": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
